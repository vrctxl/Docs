"use strict";(self.webpackChunkvrctxl=self.webpackChunkvrctxl||[]).push([[2207],{9182:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=n(5893),t=n(1151);const a={},o="Screen Manager",s={id:"video-txl/configuration/screen-manager/index",title:"Screen Manager",description:"The Screen Manager is a component included on every TXL video player prefab by default.  It is responsible for",source:"@site/docs/video-txl/configuration/screen-manager/index.md",sourceDirName:"video-txl/configuration/screen-manager",slug:"/video-txl/configuration/screen-manager/",permalink:"/Docs/docs/video-txl/configuration/screen-manager/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"VideoTXL",permalink:"/Docs/docs/video-txl/"},next:{title:"AudioLink",permalink:"/Docs/docs/video-txl/third-party/audiolink"}},l={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Texture Overrides",id:"texture-overrides",level:3},{value:"Render Textures",id:"render-textures",level:3},{value:"Shared Materials",id:"shared-materials",level:3},{value:"Material Property Blocks",id:"material-property-blocks",level:3},{value:"Global Shader Properties",id:"global-shader-properties",level:3},{value:"Object Material Overrides",id:"object-material-overrides",level:3},{value:"Debug Options",id:"debug-options",level:3},{value:"Public API",id:"public-api",level:2}];function c(e){const r={h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"screen-manager",children:"Screen Manager"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.strong,{children:"Screen Manager"})," is a component included on every TXL video player prefab by default.  It is responsible for\neverything related to ",(0,i.jsx)(r.strong,{children:"materials"})," and ",(0,i.jsx)(r.strong,{children:"rendering"})," video on surfaces, and it's responsible for managing any\nplaceholder textures when video isn't actively playing."]}),"\n",(0,i.jsx)(r.p,{children:"A Screen Manager object is given a TXL video player to bind to at start.  In advanced setups, it's possible to run\na video player without a screen manager if no rendering is required, assign a screen manager to another video player,\nor have multiple managers working from a single video player."}),"\n",(0,i.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(r.h3,{id:"texture-overrides",children:"Texture Overrides"}),"\n",(0,i.jsx)(r.h3,{id:"render-textures",children:"Render Textures"}),"\n",(0,i.jsx)(r.h3,{id:"shared-materials",children:"Shared Materials"}),"\n",(0,i.jsx)(r.h3,{id:"material-property-blocks",children:"Material Property Blocks"}),"\n",(0,i.jsx)(r.h3,{id:"global-shader-properties",children:"Global Shader Properties"}),"\n",(0,i.jsx)(r.h3,{id:"object-material-overrides",children:"Object Material Overrides"}),"\n",(0,i.jsx)(r.h3,{id:"debug-options",children:"Debug Options"}),"\n",(0,i.jsx)(r.h2,{id:"public-api",children:"Public API"})]})}function u(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>s,a:()=>o});var i=n(7294);const t={},a=i.createContext(t);function o(e){const r=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:r},e.children)}}}]);