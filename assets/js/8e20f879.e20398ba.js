"use strict";(self.webpackChunkvrctxl=self.webpackChunkvrctxl||[]).push([[4513],{5095:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>a});var s=i(5893),n=i(1151);const l={sidebar_position:1},r="Static Whitelist",c={id:"access-txl/whitelist-sources/static-whitelist",title:"Static Whitelist",description:"Static whitelists are similar to the built-in whitelist of the main ACL.  They contain a list of VRChat display names that is checked when access is requested.",source:"@site/docs/access-txl/whitelist-sources/static-whitelist.md",sourceDirName:"access-txl/whitelist-sources",slug:"/access-txl/whitelist-sources/static-whitelist",permalink:"/Docs/docs/access-txl/whitelist-sources/static-whitelist",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Whitelist Sources",permalink:"/Docs/docs/access-txl/whitelist-sources/"},next:{title:"Remote Whitelist",permalink:"/Docs/docs/access-txl/whitelist-sources/remote-whitelist"}},o={},a=[{value:"Configuration",id:"configuration",level:2},{value:"Bulk Operations",id:"bulk-operations",level:3},{value:"User List",id:"user-list",level:3},{value:"Public API",id:"public-api",level:2},{value:"Network Sync",id:"network-sync",level:3},{value:"Inherited API",id:"inherited-api",level:3},{value:"Properties",id:"properties",level:3}];function h(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.a)(),...e.components},{ApiProperty:l}=t;return l||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ApiProperty",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"static-whitelist",children:"Static Whitelist"}),"\n",(0,s.jsx)(t.p,{children:"Static whitelists are similar to the built-in whitelist of the main ACL.  They contain a list of VRChat display names that is checked when access is requested."}),"\n",(0,s.jsx)(t.p,{children:"Multiple static whitelists can be used together to further organize names, and a static whitelist can be added to multiple access control objects."}),"\n",(0,s.jsx)(t.admonition,{title:"Display names must be exact",type:"warning",children:(0,s.jsx)(t.p,{children:"Any names entered must exactly match a player's display name, including casing and special characters.  Beware of unicode look-alike characters in\nsome players' names.  It's recommended to copy their display name text from the VRChat website."})}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Static whitelist inspector window",src:i(8098).Z+"",width:"515",height:"424"})}),"\n",(0,s.jsx)(t.h3,{id:"bulk-operations",children:"Bulk Operations"}),"\n",(0,s.jsxs)(t.p,{children:["The bulk operations field makes it convenient to manage large lists of player names.  Paste a newline-separated list of players' ",(0,s.jsx)(t.strong,{children:"display names"})," into\nthe text field, and then commit them with one of the following actions:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Add Names"}),": Adds all of the names to the existing user list.  If any duplicates are present, they will be filtered out automatically."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Replace Existing"}),": Removes all existing names from the user list before adding new ones, so the user list will exactly match what was entered."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"user-list",children:"User List"}),"\n",(0,s.jsxs)(t.p,{children:["Names can be individually added to the user list using the ",(0,s.jsx)(t.strong,{children:"Add Element"})," button, and names can be individually removed with the corresponding ",(0,s.jsx)(t.strong,{children:"X"})," button\nto the right of each entry."]}),"\n",(0,s.jsx)(t.h2,{id:"public-api",children:"Public API"}),"\n",(0,s.jsx)(t.h3,{id:"network-sync",children:"Network Sync"}),"\n",(0,s.jsxs)(t.p,{children:["This object is ",(0,s.jsx)(t.strong,{children:"not"})," network synced."]}),"\n",(0,s.jsx)(t.h3,{id:"inherited-api",children:"Inherited API"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"EventBase Public API"}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/Docs/docs/access-txl/whitelist-sources/custom-whitelist#public-api",children:"AccessControlUserSource Public API"})}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h4,{id:"",children:(0,s.jsx)(l,{return:"string[]",property:"UserList",get:!0,set:!0})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Gets or sets the current array of display names associated with this static whitelist. The static whitelist will grant access to any name contained in this list."}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8098:(e,t,i)=>{i.d(t,{Z:()=>s});const s=i.p+"assets/images/access-static-whitelist-prefab-0e30405dcb5279b0065d20759ecd55f3.png"},1151:(e,t,i)=>{i.d(t,{Z:()=>c,a:()=>r});var s=i(7294);const n={},l=s.createContext(n);function r(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);